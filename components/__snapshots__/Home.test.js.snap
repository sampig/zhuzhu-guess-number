// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Home component renders without crashing 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "marginTop": 5,
        "padding": 5,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "marginLeft": 25,
          "marginRight": 25,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Help
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginLeft": 25,
          "marginRight": 25,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            New Game
          </Text>
        </View>
      </View>
    </View>
  </View>,
  <Text>
    Game status: Game started. You have 10 chances left.
  </Text>,
  <View
    style={
      Object {
        "borderRadius": 5,
        "borderWidth": 1,
        "flex": 1,
        "margin": 5,
        "padding": 15,
      }
    }
  >
    <Text>
      Your guess:
    </Text>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "display": "flex",
          "flex": 1,
        }
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flexDirection": "row",
        "paddingRight": 6,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      editable={true}
      onChangeText={[Function]}
      placeholder="Enter a 4-digit number"
      rejectResponderTermination={true}
      style={
        Object {
          "borderRadius": 5,
          "borderWidth": 2,
          "flex": 1,
          "fontSize": 20,
          "margin": 6,
          "padding": 6,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {},
          ]
        }
      >
        <Text
          disabled={true}
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#cdcdcd",
              },
            ]
          }
        >
          Guess
        </Text>
      </View>
    </View>
  </View>,
]
`;
